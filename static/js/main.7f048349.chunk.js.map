{"version":3,"sources":["actions/index.js","components/Key.js","apis/soundlinks.js","components/KeyList.js","components/Controls.js","components/Display.js","components/App.js","reducers/index.js","index.js"],"names":["muteAudio","isMuted","type","payload","toggleBank","bank","changeTitle","title","Key","handleClick","event","props","selectAudio","audioSrc","name","audioId","keyName","document","getElementById","play","handleKeyPress","key","toUpperCase","componentDidMount","addEventListener","e","className","onClick","this","onKeyPress","console","log","id","src","link","muted","Component","connect","state","volume","audio","audioLinks","altAudioLinks","renderedList","map","index","changeVolume","buttonClass","handleChange","bankName","target","onChange","value","querySelectorAll","forEach","clip","min","max","heater","piano","Display","App","combineReducers","initialState","action","store","createStore","reducers","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.7f048349.chunk.js","sourcesContent":["export const SELECTED_AUDIO = 'SELECTED_AUDIO';\nexport const MUTE_AUDIO = 'MUTE_AUDIO';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\nexport const TOGGLE_BANK = 'TOGGLE_BANK';\nexport const CHANGE_TITLE = 'CHANGE_TITLE';\nexport const CHANGE_BUTTON_CLASS = 'CHANGE_BUTTON_CLASS';\n\nexport const selectAudio = (audio) => {\n    return {\n        type: SELECTED_AUDIO,\n        payload: audio\n    }\n}\n\nexport const muteAudio = (isMuted) => {\n    return {\n        type: MUTE_AUDIO,\n        payload: isMuted\n    }\n}\n\nexport const changeVolume = (volume) => {\n    return {\n        type: CHANGE_VOLUME,\n        payload: volume\n    }\n}\n\nexport const toggleBank =  (bank) => {\n    return {\n        type: TOGGLE_BANK,\n        payload: bank\n    }\n}\n\nexport const buttonClass = (className) => {\n    return {\n        type: CHANGE_BUTTON_CLASS,\n        payload: className\n    }\n}\n\nexport const changeTitle = (title) => {\n    return {\n        type: CHANGE_TITLE,\n        payload: title\n    }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectAudio, muteAudio, changeTitle } from '../actions';\nimport './style.css';\n\nclass Key extends Component {\n    handleClick = (event) => {\n        this.props.selectAudio(this.props.audioSrc);\n        this.props.changeTitle(this.props.audioSrc.name);\n        const audioId = this.props.audioSrc.keyName;\n        const audio = document.getElementById(audioId);\n        audio.play();\n    }\n    handleKeyPress = (event) => {\n        if (event.key.toUpperCase() === this.props.audioSrc.keyName) {\n            this.handleClick();\n        }\n        \n    }\n\n    componentDidMount = () => {\n        document.addEventListener(\"keydown\", e => this.handleKeyPress(e));\n    }\n    render() {\n        return (\n            <div className=\"drum-pad-container\">\n                <button\n                    className=\"drum-pad ui inverted pink button\"\n                    onClick={this.handleClick}\n                    onKeyPress={(e) => console.log(e)}\n                >\n                    {this.props.audioSrc.keyName}\n                </button>\n                <audio\n                    className=\"clip\"\n                    id={this.props.audioSrc.keyName}\n                    src={this.props.audioSrc.link}\n                    muted={this.props.isMuted}\n                >\n    \n                </audio>\n                \n            </div>\n        )\n    }  \n}\n\nconst mapStateToProps = (state) => {\n    return { isMuted: state.isMuted, volume: state.volume}\n}\n \n\nexport default connect(\n    mapStateToProps,\n    { selectAudio, muteAudio, changeTitle }\n)(Key);","export const audioLinks = [\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n     name: \"Heater 1\",\n     id: 0,\n     keyName: 'Q'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n     name: \"Heater 2\",\n     id: 1,\n     keyName: 'W'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n     name: \"Heater 3\",\n     id: 2,\n     keyName: 'E'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n     name: \"Heater 4\",\n     id: 3,\n     keyName: 'A'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n     name: \"Heater 6\",\n     id: 4,\n     keyName: 'S'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n     name: \"Dsc oh\",\n     id: 5,\n     keyName: 'D'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n     name: \"Kick-n-hat\",\n     id: 6,\n     keyName: 'Z'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n     name: \"Kick 1\",\n     id: 7,\n     keyName: 'X'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n     name: \"Cev h2\",\n     id: 8,\n     keyName: 'C'\n    }\n]\n\nexport const altAudioLinks = [\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n     name: 'Chord 1',\n     id: 0,\n     keyName: 'Q'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n     name: 'Chord 2',\n     id: 1,\n     keyName: 'W'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n     name: 'Chord 3',\n     id: 2,\n     keyName: 'E'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n     name: 'Give Us a Light',\n     id: 3,\n     keyName: 'A'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n     name: 'Dry Ohh',\n     id: 4,\n     keyName: 'S'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n     name: 'Bld H1',\n     id: 5,\n     keyName: 'D'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n     name: 'Punchy Kick 1',\n     id: 6,\n     keyName: 'Z'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n     name: 'Side Stick 1',\n     id: 7,\n     keyName: 'X'\n    },\n    {link: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n     name: 'Brk Snr',\n     id: 8,\n     keyName: 'C'\n    },\n]\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Key from './Key';\nimport { toggleBank } from '../actions';\nimport { audioLinks, altAudioLinks } from '../apis/soundlinks.js';\n\n\nconst KeyList = (props) => {\n    const audioSrc = props.bank? altAudioLinks: audioLinks;\n    const renderedList = audioSrc.map((keyName, index) => {\n        return <Key key={audioSrc[index].id} audioSrc={audioSrc[index]} />\n    })\n    return (\n        <div className=\"keyPad ui inverted segment\">\n            {renderedList} \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { bank: state.bank }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    { toggleBank }\n)(KeyList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { muteAudio, changeVolume, toggleBank, changeTitle, buttonClass } from '../actions';\nimport './style.css';\n\nconst Controls = ({ isMuted,\n                    audio,\n                    muteAudio,\n                    volume,\n                    changeVolume,\n                    bank,\n                    toggleBank,\n                    title,\n                    changeTitle,\n                    className,\n                    buttonClass\n                    }) => {\n    const handleClick = (event) => {\n        muteAudio(!isMuted);\n    }\n    const handleChange = (event) => {\n        const bankName = event.target.name;\n        bank = 1 - bank;\n        const newTitle = bank? \"Smooth Piano\" : \"Heater\";\n        changeTitle(newTitle);\n        toggleBank(bank);\n        className[bankName] = 'ui teal active button';\n        const inactiveButton = bankName === 'piano'? 'heater': 'piano';\n        className[inactiveButton] = 'ui teal button';\n        buttonClass(className)\n    }\n\n    const handleVolume = (event) => {\n        changeVolume(event.target.value);\n        const clips = document.querySelectorAll('.clip');\n        clips.forEach((clip) => clip.volume=event.target.value/10);\n    }\n\n    return (\n        <div className=\"controlsContainer ui inverted segment\">\n            <div className=\"powerContainer controls\">\n                <button \n                    id=\"powerButton\"\n                    className=\"circular ui purple icon button\"\n                    onClick={handleClick}\n                >\n                    <i className=\"large inverted purple power off icon\"></i>\n                </button>\n            </div>\n            <div className=\"title controls\">\n                {title}\n            </div>\n            <div className=\"volumeControl controls\">\n                <input\n                    onChange={handleVolume}\n                    type=\"range\"\n                    id=\"start\"\n                    name=\"volume\"\n                    min=\"0\"\n                    max=\"10\"\n                    value={volume}\n                />\n            </div>\n            <div className=\"bank controls\">\n                <div className=\"ui large buttons\">\n                    <button \n                        className={className.heater}\n                        onClick={handleChange}\n                        name=\"heater\"\n                    >\n                        Heater\n                    </button>\n                <div className=\"or\"></div>\n                    <button \n                        className={className.piano}\n                        onClick={handleChange}\n                        name=\"piano\"\n                    >\n                        Smooth Piano\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { audio: state.audio,\n             isMuted: state.isMuted,\n             volume: state.volume,\n             bank: state.bank,\n             title: state.title,\n             className: state.className\n            }\n}\n\nexport default connect(\n    mapStateToProps,\n    { muteAudio, changeVolume, toggleBank, changeTitle, buttonClass}\n)(Controls);","import React from 'react';\nimport KeyList from './KeyList';\nimport Controls from './Controls';\n\nconst Display = () => {\n    return (\n        <div id=\"display\" className=\"ui inverted container\">\n                <div className=\"features\">\n                    <Controls />\n                </div>\n                <div className=\"features\">\n                    <KeyList />\n                </div>\n        </div>\n    )\n}\n\nexport default Display;","import React from 'react';\nimport Display from './Display.js';\nimport './style.css';\n\nconst App = () => {\n    return (\n        <div id=\"drum-machine\">\n            <Display />\n        </div>\n    )\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { SELECTED_AUDIO,\n         MUTE_AUDIO,\n         CHANGE_VOLUME,\n         TOGGLE_BANK,\n         CHANGE_TITLE,\n         CHANGE_BUTTON_CLASS } from '../actions';\n\nconst selectAudioReducer = (initialState = {}, action) => {\n    if (action.type === SELECTED_AUDIO) {\n        return action.payload;\n    }\n    return initialState;\n};\n\nconst muteAudioReducer = (isMuted = false, action) => {\n    if (action.type === MUTE_AUDIO) {\n        return action.payload;\n    }\n    return isMuted;\n}\n\nconst changeVolumeReducer = (volume= 5, action) => {\n    if (action.type === CHANGE_VOLUME) {\n        return action.payload;\n    }\n    return volume;\n}\n\nconst toggleBankReducer = (bank=0, action) => {\n    if (action.type === TOGGLE_BANK) {\n        return action.payload;\n    }\n    return bank;\n}\n\nconst buttonClassReducer = (className={piano: \"ui teal button\", heater: \"ui teal active button\"}, action) => {\n    if (action.type === CHANGE_BUTTON_CLASS) {\n        return action.payload;\n    }\n    return className;\n}\n\nconst changeTitleReducer = (title='Heater', action) => {\n    if (action.type === CHANGE_TITLE) {\n        return action.payload;\n    }\n    return title;\n}\n\nexport default combineReducers({\n    audio: selectAudioReducer,\n    isMuted: muteAudioReducer,\n    volume: changeVolumeReducer,\n    bank: toggleBankReducer,\n    title: changeTitleReducer,\n    className: buttonClassReducer\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n\n// TODO\n// CSS\n// transfer this into code pen boo."],"sourceRoot":""}